{
    "$schema": "https://json-schema.org/draft-07/schema",
    "$id": "https://data.scinfo.org.nz/edr/json-api/schema/1.0/core",
    "title": "EDR Core JSON:API Schema",
    "description": "Definitions of core components and datatypes to be used in the data element of a JSON:API response.",
    "type": "object",
    "allOf": [
        {
            "$ref": "https://data.scinfo.org.nz/edr/json-api/schema/1.0/api"
        }
    ],
    "definitions": {
        "_id": {
            "title": "JSON:API resource identifier",
            "description": "A universally unique, and persistent, identifier for the resource (https://jsonapi.org/format/#document-resource-identifier-objects). Values are the EDR database UUID.",
            "$comment": "REGEX pattern tolerates NSD UUIDs - these were prefixed with 2 to 4 digits beased on the target feature type.",
            "type": "string",
            "pattern": "^(?:[0-9]{2,4}-)?[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        },
        "_type": {
            "title": "JSON:API resource type",
            "description": "The JSON:API type (https://jsonapi.org/format/#document-resource-identifier-objects) of the resource. A human readable 'cool' compact URI that would exactly match the value of the JSON-LD @type URI.",
            "type": "string",
            "format": "uri"
        },
        "_metaObject": {
            "title": "system meta data type",
            "description": "Metadata about a resource, and its attributes or relationships.",
            "$comment": "Times map on to the PostgreSQL Periods extention system_time_start and system_time_end.",
            "type": "object",
            "required": [
                "operatorUuid",
                "timeStart",
                "timeEnd"
            ],
            "properties": {
                "operatorUuid": {
                    "type": "string",
                    "pattern": "^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|system-nsdr-api-function-unspecified-operator)$",
                    "$comment": "REGEX pattern tolerates nsdr unspecified operator UUID."
                },
                "timeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "timeEnd": {
                    "oneOf": [
                        {
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "type": "string",
                            "const": "infinity"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            }
        },
        "_conceptLiteral": {
            "title": "concept property value data type",
            "description": "A literal URI value for a concept.",
            "type": "string",
            "format": "uri"
        },
        "_conceptPropertyValue": {
            "title": "concept property value data type",
            "description": "A structured concept object for a property value that includes method, time and quality metadata.",
            "type": "object",
            "required": [
                "value"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                }
            ],
            "properties": {
                "value": {
                    "$ref": "#/definitions/_conceptLiteral"
                }
            }
        },
        "_dateOrDateTime": {
            "title": "date or date-time Property Schema",
            "description": "A temporal value that may be in either date or a date-time format.",
            "oneOf": [
                {
                    "type": "string",
                    "format": "date-time"
                },
                {
                    "type": "string",
                    "format": "date"
                }
            ]
        },
        "_dateTimePropertyValue": {
            "title": "date-time value Property Schema",
            "description": "A date or time value for a measurement or property",
            "type": "object",
            "required": [
                "value"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:DT_DateTime"
                },
                "value": {
                    "$ref": "#/definitions/_dateOrDateTime"
                }
            }
        },
        "_ewktLiteral": {
            "title": "extended well-known text data type",
            "description": "A well-known text (https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry) geometry with a declared spatial reference system.",
            "type": "string",
            "pattern": "^SRID=[0-9]{4,5};(?:MULTI)?(?:POINT|LINE|POLYGON)\\s?\\([0-9\\s,\\.\\-\\(\\)]*\\)$"
        },
        "_ewktPropertyValue": {
            "title": "EWKT value Property Schema",
            "description": "An EWKT value for a measurement or property",
            "type": "object",
            "required": [
                "value"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:DT_EWKT"
                },
                "value": {
                    "$ref": "#/definitions/_ewktLiteral"
                }
            }
        },
        "_integerPropertyValue": {
            "title": "integer value Property Schema",
            "description": "An integer value for a measurement or property",
            "type": "object",
            "required": [
                "value"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:DT_Integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "_methodObject": {
            "title": "method Property Schema",
            "description": "A description of the method used to establish a property value. E.g. a lab technique, and/or a sensor or function.",
            "type": "object",
            "required": [
                "technique"
            ],
            "properties": {
                "technique": {
                    "title": "technique Property Schema",
                    "description": "The ID of (and reference to the definition of) the value's technique as documented in a manual or report.",
                    "$comment": "Is a sub-type of method.",
                    "$ref": "#/definitions/_conceptLiteral"
                },
                "sensor": {
                    "title": "sensor Property Schema",
                    "description": "The ID of the method's sensor. Used instead of a function value.",
                    "$comment": "Is a sub-type of method.",
                    "$ref": "#/definitions/_sensorObject"
                },
                "function": {
                    "title": "function Property Schema",
                    "description": "The ID of (and reference to the definition of) the function used to calculate the value. Used instead of a sensor value.",
                    "$comment": "Is a sub-type of method.",
                    "$ref": "#/definitions/_conceptLiteral"
                }
            }
        },
        "_numberPropertyValue": {
            "title": "number value Property Schema",
            "description": "An number value for a measurement or property",
            "type": "object",
            "required": [
                "value"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:DT_Number"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "_numericObject": {
            "title": "EDR numericRange data type",
            "description": "A single numeric value with a comparison operator and a unit of measure.",
            "type": "object",
            "required": [
                "value",
                "unitOfMeasure"
            ],
            "properties": {
                "operator": {
                    "description": "Comparison operator for numeric values.",
                    "$comment": "To help when searching or comparing values.",
                    "type": "string",
                    "default": "=",
                    "enum": [
                        "=",
                        "!=",
                        "<",
                        "<=",
                        ">",
                        ">=",
                        "~"
                    ]
                },
                "value": {
                    "title": "numeric value",
                    "description": "The value.",
                    "type": "number"
                },
                "unitOfMeasure": {
                    "$ref": "#/definitions/_resourceObject"
                }
            }
        },
        "_numericPropertyValue": {
            "title": "numeric value data type",
            "description": "A structured object for a numeric value that includes method, time and quality metadata.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                },
                {
                    "$ref": "#/definitions/_numericObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:DT_Numeric"
                }
            }
        },
        "_numericRangeObject": {
            "title": "EDR numericRange data type",
            "description": "A pair of numeric value with a comparison operator (defining inclusive/exclusive ranges) and a unit of measure.",
            "type": "object",
            "required": [
                "value",
                "unitOfMeasure"
            ],
            "properties": {
                "operator": {
                    "title": "Comparison operator for @value.minimum and @value.maximum.",
                    "description": "The value as a pair of numbers representing the minimum and maximum bounds of the value. Comparison operators used to define inclusive or exclusive ranges.",
                    "type": "object",
                    "required": [
                        "minimum",
                        "maximum"
                    ],
                    "properties": {
                        "minimum": {
                            "type": "string",
                            "default": ">=",
                            "enum": [
                                "<",
                                "<=",
                                ">",
                                ">="
                            ]
                        },
                        "maximum": {
                            "type": "string",
                            "default": "<=",
                            "enum": [
                                "<",
                                "<=",
                                ">",
                                ">="
                            ]
                        }
                    }
                },
                "value": {
                    "title": "numeric range value",
                    "description": "The value as a pair of numbers representing the minimum and maximum bounds of the value.",
                    "type": "object",
                    "required": [
                        "minimum",
                        "maximum"
                    ],
                    "properties": {
                        "minimum": {
                            "type": "number"
                        },
                        "maximum": {
                            "type": "number"
                        }
                    }
                },
                "unitOfMeasure": {
                    "$ref": "#/definitions/_resourceObject"
                }
            }
        },
        "_numericRangePropertyValue": {
            "title": "numeric range value data type",
            "description": "A structured object for a numeric range value that includes method, time and quality metadata.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                },
                {
                    "$ref": "#/definitions/_numericRangeObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:DT_NumericRange"
                }
            }
        },
        "_propertyObject": {
            "title": "property value data type",
            "description": "A structured object for a property value that includes method, time and quality metadata.",
            "type": "object",
            "required": [
                "type",
                "id"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/_id"
                },
                "valueTime": {
                    "title": "valueTime Property Schema",
                    "description": "The date and time (optional) when the value was generated - e.g. when the measurement was made in a laboratory.",
                    "$ref": "#/definitions/_dateOrDateTime"
                },
                "method": {
                    "$ref": "#/definitions/_methodObject"
                },
                "meta": {
                    "$ref": "#/definitions/_metaObject"
                }
            }
        },
        "_resourceObject": {
            "title": "resource property value data type",
            "description": "A structured object for a resource. Not a relationship so linking depends on the resources compactURI.",
            "$comment": "Used when a relationship link to a resource is not required or possible (e.g. the resource is managed by another system, such as a concept or sensor). Type may be used when the target is ambiguous (e.g. not declared in a property object).",
            "type": "object",
            "required": [
                "compactURI"
            ],
            "properties": {
                "compactURI": {
                    "type": "string",
                    "format": "uri"
                },
                "type": {
                    "$ref": "#/definitions/_type"
                },
                "preferredLabel": {
                    "type": "string"
                },
                "links": {
                    "$ref": "https://data.scinfo.org.nz/edr/json-api/schema/1.0/api#/definitions/_relationshipLinks"
                }
            }
        },
        "_sensorObject": {
            "title": "sensor property value data type",
            "description": "A structured object for a sensor.",
            "$comment": "Used when a relationship link to a resource is not required or possible (e.g. the resource is managed by another system, such as a concept or sensor).",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/_resourceObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:SA_Sensor"
                }
            }
        },
        "_stringPropertyValue": {
            "title": "string value Property Schema",
            "description": "A string value for a measurement or property",
            "type": "object",
            "required": [
                "value"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:DT_String"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "_urlPropertyValue": {
            "title": "URL value Property Schema",
            "description": "A URL value for a measurement or property",
            "type": "object",
            "required": [
                "value"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/_propertyObject"
                }
            ],
            "properties": {
                "type": {
                    "const": "edr-def:DT_URL"
                },
                "value": {
                    "type": "string",
                    "format": "uri"
                }
            }
        }
    }
}